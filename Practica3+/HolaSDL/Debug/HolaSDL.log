  GameStateMachine.cpp
d:\tpv\practica 3\practica3+\holasdl\arkanoidobject.h(19): warning C4244: 'inicializando': conversión de 'double' a 'uint'; posible pérdida de datos
d:\tpv\practica 3\practica3+\holasdl\arkanoidobject.h(24): warning C4244: 'inicializando': conversión de 'double' a 'uint'; posible pérdida de datos
d:\tpv\practica 3\practica3+\holasdl\arkanoidobject.h(31): warning C4244: 'inicializando': conversión de 'double' a 'uint'; posible pérdida de datos
d:\tpv\practica 3\practica3+\holasdl\block.h(35): warning C4244: 'return': conversión de 'double' a 'uint'; posible pérdida de datos
d:\tpv\practica 3\practica3+\holasdl\block.h(36): warning C4244: 'return': conversión de 'double' a 'uint'; posible pérdida de datos
d:\tpv\practica 3\practica3+\holasdl\block.h(39): warning C4244: 'return': conversión de 'double' a 'int'; posible pérdida de datos
d:\tpv\practica 3\practica3+\holasdl\block.h(40): warning C4244: 'return': conversión de 'double' a 'int'; posible pérdida de datos
d:\tpv\practica 3\practica3+\holasdl\blocksmap.h(44): warning C4018: '<': no coinciden signed/unsigned
d:\tpv\practica 3\practica3+\holasdl\blocksmap.h(47): warning C4018: '<': no coinciden signed/unsigned
d:\tpv\practica 3\practica3+\holasdl\gamestatemachine.cpp(30): error C2678: '==' binario: no se encontró un operador que adopte un operando en la parte izquierda de tipo 'std::stack<GameState *,std::deque<_Ty,std::allocator<_Ty>>>' (o bien no existe una conversión aceptable)
          with
          [
              _Ty=GameState *
          ]
  d:\visualstudio\vc\tools\msvc\14.16.27023\include\system_error(284): note: puede ser 'bool std::operator ==(const std::error_condition &,const std::error_condition &) noexcept'
  d:\visualstudio\vc\tools\msvc\14.16.27023\include\system_error(278): note: o       'bool std::operator ==(const std::error_condition &,const std::error_code &) noexcept'
  d:\visualstudio\vc\tools\msvc\14.16.27023\include\system_error(272): note: o       'bool std::operator ==(const std::error_code &,const std::error_condition &) noexcept'
  d:\visualstudio\vc\tools\msvc\14.16.27023\include\system_error(266): note: o       'bool std::operator ==(const std::error_code &,const std::error_code &) noexcept'
  d:\visualstudio\vc\tools\msvc\14.16.27023\include\exception(331): note: o       'bool std::operator ==(const std::exception_ptr &,std::nullptr_t) noexcept'
  d:\visualstudio\vc\tools\msvc\14.16.27023\include\exception(326): note: o       'bool std::operator ==(std::nullptr_t,const std::exception_ptr &) noexcept'
  d:\visualstudio\vc\tools\msvc\14.16.27023\include\exception(321): note: o       'bool std::operator ==(const std::exception_ptr &,const std::exception_ptr &) noexcept'
  d:\tpv\practica 3\practica3+\holasdl\gamestatemachine.cpp(30): note: u       'operador==(GameState *, GameState *) C++ integrado'
  d:\tpv\practica 3\practica3+\holasdl\gamestatemachine.cpp(30): note: al hacer coincidir la lista de argumentos '(std::stack<GameState *,std::deque<_Ty,std::allocator<_Ty>>>, GameState *)'
          with
          [
              _Ty=GameState *
          ]
